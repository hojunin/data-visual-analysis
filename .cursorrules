# Instructions

During you interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.cursorrules` file so you will not make the same mistake again. 

You should also use the `.cursorrules` file as a scratchpad to organize your thoughts. Especially when you receive a new task, you should first review the content of the scratchpad, clear old different task if necessary, first explain the task, and plan the steps you need to take to complete the task. You can use todo markers to indicate the progress, e.g.
[X] Task 1
[ ] Task 2

Also update the progress of the task in the Scratchpad when you finish a subtask.
Especially when you finished a milestone, it will help to improve your depth of task accomplishment to use the scratchpad to reflect and plan.
The goal is to help you maintain a big picture as well as the progress of the task. Always refer to the Scratchpad when you plan the next step.

# Lessons

## User Specified Lessons

- You have a python venv in ./venv. Use it.
- Include info useful for debugging in the program output.
- Read the file before you try to edit it.
- Due to Cursor's limit, when you use `git` and `gh` and need to submit a multiline commit message, first write the message in a file, and then use `git commit -F <filename>` or similar command to commit. And then remove the file. Include "[Cursor] " in the commit message and PR title.

## Cursor learned

- For search results, ensure proper handling of different character encodings (UTF-8) for international queries
- Add debug information to stderr while keeping the main output clean in stdout for better pipeline integration
- When using seaborn styles in matplotlib, use 'seaborn-v0_8' instead of 'seaborn' as the style name due to recent seaborn version changes
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities

# Scratchpad

## Completed Task: README 작성

### Task Description:
사용자가 프로젝트를 위한 README 파일을 작성해달라고 요청했습니다. 이는 data-visualize-graph 프로젝트로, Streamlit 기반의 데이터 시각화 웹 애플리케이션입니다.

### Project Analysis:
- **주요 기술 스택**: Streamlit, Plotly, Pandas, Scikit-learn, NumPy, SciPy
- **프로젝트 구조**: 
  - streamlit_app.py (메인 앱)
  - utils.py (유틸리티 함수들)
  - pages/ (10개의 다양한 분석 페이지)
- **주요 기능**:
  - 기본 데이터 분석 및 시각화
  - 그래프 비교 및 겹치기
  - 고급 통계 분석
  - 대시보드
  - 데이터 전처리
  - 회귀분석
  - 머신러닝 모델 평가
  - 시계열 분석
  - 클러스터링 분석

### Task Plan:
[X] 프로젝트 개요 작성
[X] 설치 및 실행 방법 작성
[X] 주요 기능 설명
[X] 파일 구조 설명
[X] 사용법 가이드
[X] 기여 방법 및 라이선스 정보
[X] README.md 파일 생성

### Progress:
- [X] 프로젝트 구조 분석 완료
- [X] 주요 파일 내용 확인 완료
- [X] README.md 작성 완료

### Completed README Features:
- 📊 이모지를 활용한 시각적 가독성 향상
- 💾 구체적인 설치 및 실행 방법 제공
- 📁 프로젝트 구조 다이어그램 포함
- 🛠️ 기술 스택 명시
- 📖 페이지별 상세 사용법 가이드
- 🎨 UI/UX 특징 설명
- 🤝 기여 방법 및 라이선스 정보 포함
- 🐛 버그 리포트 및 기능 요청 가이드 제공

### Reflection:
README 작성이 성공적으로 완료되었습니다. 사용자가 프로젝트를 쉽게 이해하고 실행할 수 있도록 포괄적이고 구체적인 정보를 제공했습니다. 특히 한국어로 작성하여 사용자의 요구사항에 맞췄고, 이모지를 활용해 가독성을 높였습니다. 